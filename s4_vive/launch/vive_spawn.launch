<?xml version="1.0"?>
<launch>
  <arg name="target" default="sim"/>
  <arg name="unit" default=""/>
  <arg name="vive_tf_dynamic" default="false"/>
  <arg name="vive_tf_static" default="0 0 0 0 0 0"/>
  <arg name="c0_name" default=""/>
  <arg name="c1_name" default=""/>
  <arg name="t0_name" default=""/>
  <arg name="t1_name" default=""/>

  <include file="$(find s4_vive)/launch/remote_list.launch" />

  <group ns="$(arg unit)">
    <arg name="model" default="$(find s4_vive)/urdf/vive_tracking.urdf.xacro"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
      <param name="robot_description" value="$(arg unit)/robot_description" />
      <param name="tf_prefix" value="$(arg unit)"/>
    </node>

    <group unless="$(eval target == 'sim')">
      <group if="$(arg vive_tf_dynamic)">
        <node name="dinamic_tf_world" pkg="s4_vive" type="s4_vive_dynamic_transform">
          <param name="source_frame" value="world"/>
          <param name="target_frame" value="vive_tmp"/>
        </node>
        <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure"/>
      </group>
      <group unless="$(arg vive_tf_dynamic)">
        <node pkg="tf" type="static_transform_publisher" name="static_tf_world" args="$(arg vive_tf_static) world vive_tmp 100" />
      </group>
      <node pkg="tf" type="static_transform_publisher" name="vive_world" args="0.0 0.0 0.0 0.0 0.0 1.57079 vive_tmp vive_world 100" />
      <node machine="$(arg target)" pkg="s4_vive" name="vive_bridge" type="vive_bridge.py" output="screen"/>
    </group>
    <group ns="controller0" unless="$(eval c0_name == '')">
        <node pkg="tf" type="static_transform_publisher" name="tf_overlap" args="0.0 0.0 0 0.0 0.0 0 $(arg c0_name) $(arg unit)/controller0/body_link 100" />
        <node name="s4_vive_goal_tf"  pkg="s4_vive" type="s4_vive_goal_tf" >
          <param name="pointer_frame" value="$(arg unit)/controller0/pointer_link"/>
          <param name="goal_frame"    value="$(arg unit)/controller0/goal_link"/>
        </node>
        <node name="relay" type="relay" pkg="topic_tools" args="/$(arg unit)/$(arg c0_name)/joy joy">
          <param name="lazy" value="true" />
        </node>
    </group>
    <group ns="controller1" unless="$(eval c1_name == '')">
        <node pkg="tf" type="static_transform_publisher" name="tf_overlap" args="0.0 0.0 0 0.0 0.0 0 $(arg c1_name) $(arg unit)/controller1/body_link 100" />
        <node name="s4_vive_goal_tf"  pkg="s4_vive" type="s4_vive_goal_tf" >
          <param name="pointer_frame" value="$(arg unit)/controller1/pointer_link"/>
          <param name="goal_frame"    value="$(arg unit)/controller1/goal_link"/>
        </node>
        <node name="relay" type="relay" pkg="topic_tools" args="/$(arg unit)/$(arg c1_name)/joy joy">
          <param name="lazy" value="true" />
        </node>
    </group>
    <group ns="tracker0" unless="$(eval t0_name == '')">
      <node pkg="tf" type="static_transform_publisher" name="tf_overlap" args="0.0 0.0 0 0.0 0.0 0 $(arg t0_name) $(arg unit)/tracker0/body_link 100" />
    </group>
    <group ns="tracker1" unless="$(eval t1_name == '')">
      <node pkg="tf" type="static_transform_publisher" name="tf_overlap" args="0.0 0.0 0 0.0 0.0 0 $(arg t1_name) $(arg unit)/tracker1/body_link 100" />
    </group>
  </group>
</launch>
